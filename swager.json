{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Swagger pets",
    "description": "Pets API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:3000//" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    },
    {
      "name": "User+Pets",
      "description": "User and Pets endpoints"
    },
    {
      "name": "Friends",
      "description": "Friends endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    }
  ],
  "paths": {
    "api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Autentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User current",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User current object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/auth/editUserForm": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Edit user information",
        "parameters": [
          {
            "name": "body",
            "in": "path",
            "description": "Updated user information",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User current object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/auth/updateAvatar": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user avatar",
        "parameters": [
          {
            "name": "avatarURL",
            "in": "formData",
            "description": "User avatar image file",
            "required": true,
            "type": "file"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User current object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User logout object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/auth/refresh-token": {
      "post": {
        "tags": ["Auth"],
        "summary": "User refresh-token",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Refreshing token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/notices/search/{category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get Notices by category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category of notices",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request ((invalid request parameters))",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "api/notices/search/{category}/{title}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get Notices category and title",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category of notices",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "path",
            "description": "Title of notices",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNitecesByCategoryAndTitleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request ((invalid request parameters))",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "api/notices/{id}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get Notice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id notice",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request parameters)",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "api/notices/query/{title}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get Notice by title",
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "description": "title notice",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchByTitleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request parameters)",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "api/notices/filter/by?age={age}&sex={sex}&category={category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Filter notices by age or sex",
        "parameters": [
          {
            "name": "age",
            "in": "path",
            "description": "Pet age",
            "type": "string",
            "default": "1"
          },
          {
            "name": "sex",
            "in": "path",
            "description": "Pet sex",
            "type": "string",
            "default": "male"
          },
          {
            "name": "category",
            "in": "path",
            "description": "Pet category",
            "type": "string",
            "default": "sell"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterPetsByAgeOrSexResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request parameters)",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "api/notices/": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add Notice",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category notice",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "path",
            "description": "Title of notice",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Pet name",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "Pet Birthday",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of pet",
            "required": true,
            "type": "string"
          },
          {
            "name": "sex",
            "in": "path",
            "description": "Sex of pet",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Location of pet",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "path",
            "description": "Photo of pet",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "path",
            "description": "Price of pet",
            "required": true,
            "type": "number"
          },
          {
            "name": "Comment",
            "in": "path",
            "description": "Comment",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Category and title object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/notices/{id}/favorite": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Add/Delete notice to/from favorites",
        "parameters": [
          {
            "name": "favorite",
            "in": "path",
            "description": "favorite",
            "required": true,
            "type": "boolean"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add favorite true or false",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrDeleteNoticeFromFavoriteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddOrDeleteNoticeFromFavoriteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid input data)",
            "content": {}
          }
        }
      }
    },
    "api/notices/get/favorites": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get favorites Notices",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getFavoritesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/notices/get/favorites?age={age}&title={title}&sex={sex}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get favorites notices by filter",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Get favorites notices by filter",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all own Notices",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAllOwnNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request ",
            "content": {}
          }
        }
      }
    },
    "api/notices?age={age}&sex={sex}&title={title}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all own notices by filter",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAllOwnNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request ",
            "content": {}
          }
        }
      }
    },
    "api/notices/{:id}": {
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete own Notice",
        "parameters": [
          {
            "id": "23jjknjk534jkn4n323kj4",
            "in": "path",
            "description": "Notice ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Delete own Notice",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOwnNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOwnNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Id not found",
            "content": {}
          }
        }
      }
    },
    "api/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add pet",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Pet name",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "description": "Pet Birthday",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of pet",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "path",
            "description": "Photo of pet",
            "required": true,
            "type": "string"
          },
          {
            "name": "Comment",
            "in": "path",
            "description": "Comment",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add pet",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMyPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMyPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/pets/:id": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete Pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pet id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Delete pet",
          "required": true,
          "content": {}
        },
        "responses": {
          "204": {
            "description": "No content. Delete pet successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMyPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Pet is not found",
            "content": {}
          }
        }
      }
    },
    "api/user-info": {
      "get": {
        "tags": ["User+Pets"],
        "summary": "Get user and his pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Get user and his pets",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get news",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getNewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/news/{title}": {
      "get": {
        "tags": ["News"],
        "summary": "Get news by title",
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "description": "title news",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/friends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Get friends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getFriendsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetAllNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "Category notice"
            }
          }
        },
        "example": [
          {
            "category": "sell",
            "name": "Patrick",
            "type": "dog",
            "price": 120
          },
          { "category": "sell", "name": "Luna", "type": "cat", "price": 234 }
        ]
      },
      "GetAllNitecesByCategoryAndTitleResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "category": "sell",
            "title": "i want sell my dog",
            "name": "Patrick",
            "type": "dog",
            "price": 120
          },
          {
            "category": "sell",
            "title": "selling dog",
            "name": "Luna",
            "type": "cat",
            "price": 234
          }
        ]
      },
      "GetByIdResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "6517bc1a7c80aa82063b7fb0",
            "category": "sell",
            "title": "cute ferret",
            "name": "Max",
            "date": "11-05-2022",
            "age": 1,
            "type": "ferret",
            "file": "http://res.cloudinary.com/dofau6dtf/image/upload/v1696054298/notices/vkmibkcoydvqlbqxoc2l.jpg",
            "sex": "male",
            "location": "Mykolaiv",
            "price": 750,
            "comments": "Never give up!!",
            "favorite": false,
            "owner": "651679bcf7bee055b200c446"
          }
        ]
      },
      "SearchByTitleResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "6517bc1a7c80aa82063b7fb0",
            "category": "sell",
            "title": "cute ferret",
            "name": "Max",
            "date": "11-05-2022",
            "age": 1,
            "type": "ferret",
            "file": "http://res.cloudinary.com/dofau6dtf/image/upload/v1696054298/notices/vkmibkcoydvqlbqxoc2l.jpg",
            "sex": "male",
            "location": "Mykolaiv",
            "price": 750,
            "comments": "Never give up!!",
            "favorite": false,
            "owner": "651679bcf7bee055b200c446"
          }
        ]
      },
      "FilterPetsByAgeOrSexResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "_id": "6517c16cdae9d89e7c3d307d",
            "category": "sell",
            "title": "beautiful hamster",
            "name": "Mars",
            "date": "11-05-2023",
            "age": 0.4,
            "type": "hamster",
            "file": "http://res.cloudinary.com/dofau6dtf/image/upload/v1696055660/notices/krninlfkdq46v25jymik.jpg",
            "sex": "male",
            "location": "Lviv",
            "price": 250,
            "comments": "hamster",
            "favorite": false,
            "owner": "651679bcf7bee055b200c446"
          }
        ]
      },
      "AddNoticeRequest": {
        "type": "object",
        "required": [
          "title",
          "category",
          "title",
          "name",
          "type",
          "price",
          "location"
        ],
        "properties": {
          "category": {
            "type": "string",
            "description": "Category of notice",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Title of notice",
            "example": "i want sell my dog"
          },
          "name": {
            "type": "String",
            "description": "Pet name",
            "example": "Patrick"
          },
          "type": {
            "type": "String",
            "description": "Type of pet",
            "example": "dog"
          },
          "price": {
            "type": "Number",
            "description": "Price of pet",
            "example": 120
          },
          "location": {
            "type": "String",
            "description": "Location of pet",
            "example": "Kyiv"
          },
          "comment": {
            "type": "String",
            "description": "Comment",
            "example": "text"
          }
        }
      },
      "AddNoticeResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "324dgbvk54dfgkj34",
            "category": "sell",
            "title": "i want sell my dog",
            "name": "Patrick",
            "type": "dog",
            "price": 120,
            "location": "Kyiv",
            "comment": "text",
            "favorite": false
          }
        ]
      },
      "AddOrDeleteNoticeFromFavoriteRequest": {
        "type": "object",
        "required": ["favorite"],
        "properties": {
          "favorite": {
            "type": "boolean",
            "description": "Add to favorite",
            "example": true
          }
        }
      },
      "getFavoritesResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "324dgbvk54dfgkj34",
            "category": "sell",
            "title": "i want sell my dog",
            "name": "Patrick",
            "type": "dog",
            "price": 120,
            "location": "Kyiv",
            "comment": "text",
            "favorite": true
          }
        ]
      },
      "AddOrDeleteNoticeFromFavoriteResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "324dgbvk54dfgkj34",
            "category": "sell",
            "title": "i want sell my dog",
            "name": "Patrick",
            "type": "dog",
            "price": 120,
            "location": "Kyiv",
            "comment": "text",
            "favorite": true
          }
        ]
      },
      "getAllOwnNoticesResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "324dgbvk54dfgkj34",
            "category": "sell",
            "title": "i want sell my dog",
            "name": "Patrick",
            "type": "dog",
            "price": 120,
            "location": "Kyiv",
            "comment": "text",
            "favorite": true
          },
          {
            "id": "324dgbvk54dfgkj34",
            "category": "sell",
            "title": "i want sell my dog",
            "name": "Patrick",
            "type": "dog",
            "price": 120,
            "location": "Kyiv",
            "comment": "text",
            "favorite": true
          }
        ]
      },
      "DeleteOwnNoticeRequest": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Notice ID",
            "example": "23055jnb2n3b43h4jbhjb4"
          }
        }
      },
      "DeleteOwnNoticeResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "23055jnb2n3b43h4jbhjb4",
            "category": "sell",
            "title": "i want sell my dog",
            "name": "Patrick",
            "type": "dog",
            "price": 120,
            "location": "Kyiv",
            "comment": "text",
            "favorite": true
          }
        ]
      },
      "AddMyPetRequest": {
        "type": "object",
        "required": ["name", "type", "date", "file"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet name",
            "example": "Niki"
          },
          "type": {
            "type": "string",
            "description": "Pet type",
            "example": "cat"
          },
          "date": {
            "type": "string",
            "description": "Notice ID",
            "example": "12-12-2020"
          },
          "file": {
            "type": "string",
            "description": "Photo of pet",
            "example": "http://image348524.com.ua"
          },
          "comment": {
            "type": "string",
            "description": "comment",
            "example": "text"
          }
        }
      },
      "AddMyPetResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "23055jnb2n3b43h4jbhjb4",
            "name": "Niki",
            "type": "cat",
            "file": "http://image348524.com.ua",
            "comment": "text"
          }
        ]
      },
      "DeleteMyPetRequest": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Pet ID",
            "example": "23055jnb2n3b43h4jbhjb4"
          }
        }
      },
      "DeleteMyPetResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "id": "23055jnb2n3b43h4jbhjb4",
            "name": "Patrick",
            "type": "dog",
            "comment": "text"
          }
        ]
      },
      "getNewsResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "_id": "6512ea308bbef162d573e96c",
            "title": "Purina",
            "url": "https://www.purina.ua/",
            "addressUrl": null,
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_290.png",
            "address": null,
            "workDays": null,
            "phone": "+380800500950",
            "email": "info@ua.nestle.com"
          }
        ]
      },
      "getNewsByTitleResponseType": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "_id": "6512ea308bbef162d573e96c",
            "title": "Purina",
            "url": "https://www.purina.ua/",
            "addressUrl": null,
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_290.png",
            "address": null,
            "workDays": null,
            "phone": "+380800500950",
            "email": "info@ua.nestle.com"
          }
        ]
      },
      "getFriendsResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": [
          {
            "_id": "6512ea308bbef162d573e96c",
            "title": "Purina",
            "url": "https://www.purina.ua/",
            "addressUrl": null,
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_290.png",
            "address": null,
            "workDays": null,
            "phone": "+380800500950",
            "email": "info@ua.nestle.com"
          }
        ]
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "userId": {
              "type": "number",
              "description": "User's id",
              "example": "32143232436545474"
            }
          }
        },
        "example": [
          { "email": "1@gmail.com", "userId": "1" },
          { "email": "2@gmail.com", "userId": "2" }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
